buildscript {
	ext {
		springBootVersion = '2.0.3.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}

}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'com.dm'
version = '1.0'
sourceCompatibility = 1.8

repositories {
	mavenCentral()
	maven { url 'https://repo.spring.io/snapshot' }
	maven { url 'https://repo.spring.io/milestone' }
}

dependencies {

    compile('org.springframework.boot:spring-boot-starter-data-jpa')
	compile('org.springframework.boot:spring-boot-starter-web')
    compile("org.springframework.boot:spring-boot-devtools")
    compile("com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.9.6")
    compile("org.apache.commons:commons-lang3:3.7")
	compile("io.springfox:springfox-swagger2:2.9.2")
	compile("io.springfox:springfox-swagger-ui:2.9.2")
	compile('org.springframework.boot:spring-boot-starter-security')
	compile('org.springframework.security.oauth.boot:spring-security-oauth2-autoconfigure:2.0.2.BUILD-SNAPSHOT')
	// https://mvnrepository.com/artifact/org.springframework.security.oauth/spring-security-oauth2
	compile group: 'org.springframework.security.oauth', name: 'spring-security-oauth2', version: '2.3.3.RELEASE'



	testCompile('org.springframework.boot:spring-boot-starter-test')
	testCompile('com.intuit.karate:karate-junit4:0.7.0')
	testCompile('com.intuit.karate:karate-apache:0.7.0')

    runtime('com.h2database:h2')
}

task unitTest ( type: Test ) {
	exclude 'features/**'
	testLogging {
		events = ["passed", "skipped", "failed"]
	}
}

task karateTest( type: Test ) {
	include 'features/**'
	testLogging {
		events = ["passed", "skipped", "failed"]
	}

	// pull cucumber options into the cucumber jvm
	systemProperty "cucumber.options", System.properties.getProperty("cucumber.options")
	// pull karate options into the jvm
	systemProperty "karate.env", System.properties.getProperty("karate.env")
	// ensure tests are always run
	outputs.upToDateWhen { false }

}
